- name:
  hosts: all
  vars:
    required_ansible_version: 2.0.2
  tasks:
  - fail: msg="Playbook requires ansible >= {{required_ansible_version}}"
    when: ansible_version.string|version_compare(required_ansible_version, '<')

- name: Create users
  hosts: all
  become: yes
  roles:
    - users

- name: Common configuration
  hosts: all
  become: yes
  become_user: hpccloud
  roles:
    - common

- name: Set up rabbitmq
  hosts: cumulus
  become: yes
  become_user: hpccloud
  roles:
    - rabbitmq

- name: Setup cumulus
  hosts: cumulus
  become: yes
  become_user: hpccloud
  roles:
    - cumulus

  post_tasks:
    - name: Update Celery broker URL
      become: yes
      become_user: hpccloud
      lineinfile:
        dest: /opt/hpccloud/cumulus/cumulus/celery/commonconfig.py
        regexp: '^broker_url.*$'
        line: "broker_url = 'amqp://{{rabbitmq_celery_user}}:{{rabbitmq_celery_password}}@localhost:5672//celery'"
      when: rabbitmq_admin_user is defined

    - name: Tighten up permissions on commonconfig.py
      become: yes
      become_user: hpccloud
      file:
        path: /opt/hpccloud/cumulus/cumulus/celery/commonconfig.py
        mode: 0600
      when: rabbitmq_admin_user is defined


- name: Set up ParaView
  hosts: paraview
  become: yes
  become_user: hpccloud
  roles:
    - osmesa
    - paraview

- name: Set up hpccloud
  hosts: hpccloud
  become: yes
  become_user: hpccloud
  roles:
    - hpccloud

- name: Setup MongoDB
  hosts: mongo
  become: yes
  become_user: root
  roles:
    - role: mongodb

  post_tasks:
    - name: Setup MongDB with authorization
      include: mongodb_auth.yml
      when: mongodb_admin_user is defined

    - name: Setup MongoDB with TLS/SSL
      include: mongodb_ssl.yml
      when: mongodb_ssl_pem_path is defined

- name: Setup Girder
  hosts: girder
  become: yes
  become_user: hpccloud
  vars:
    girder_start: no
    girder_web_extra_args: --all-plugins
  roles:
    - role: girder
      girder_path: /opt/hpccloud/girder

  post_tasks:
    - name: Update monogdb URI with auth credentials
      ini_file:
        dest: /opt/hpccloud/girder/girder/conf/girder.local.cfg
        section: database
        option: uri
        value: "\"mongodb://{{auth_uri_params | default('')}}localhost:27017/girder{{tls_uri_params | default('')}}\""
      become_user: hpccloud
      tags: girder

    - name: Allow logins to be three chars
      ini_file:
        dest: /opt/hpccloud/girder/girder/conf/girder.local.cfg
        section: users
        option: login_regex
        value: '"^[a-z][\da-z\-]{2}[\da-z\-]*$"'
      become_user: hpccloud
      tags: girder

    - name: Start Girder
      become: yes
      become_user: root
      service:
        name: girder
        state: started
      tags: girder

    - name: Wait for Girder to start
      wait_for: port=8080 delay=5
      tags: girder

    - name: Create Girder hpccloud user
      girder:
        port: 8080
        user:
          firstName: "hpccloud"
          lastName: "hpccloud"
          login: "hpccloud"
          password: "{{ hpccloud_password }}"
          email: "hpccloud@kitware.com"
          admin: yes
        state: present
      tags: girder

    - name: Create Girder cumulus user
      girder:
        port: 8080
        username: "hpccloud"
        password: "{{ hpccloud_password }}"
        user:
          firstName: "cumulus"
          lastName: "cumulus"
          login: "cumulus"
          password: "{{ lookup('password', 'credentials/cumuluspassword') }}"
          email: "cumulus@kitware.com"
          admin: yes
        state: present
      tags: girder

    - name: Create Girder cumulus group
      girder:
        port: 8080
        username: "hpccloud"
        password: "{{ hpccloud_password }}"
        group:
          name: "cumulus"
          description: "The cumulus group"
          users:
            - login: cumulus
              type: member
      tags: girder

    - name: Install cumulus plugins
      shell: "ls | xargs girder-install plugin -s -f"
      args:
        chdir: /opt/hpccloud/cumulus/girder/
        creates: /opt/hpccloud/girder/plugins/cumulus
      tags: girder

    - name: Install HPCCloud plugins
      shell: "ls | xargs girder-install plugin -s -f"
      args:
        chdir: /opt/hpccloud/hpccloud/server/
        creates: /opt/hpccloud/girder/plugins/hpccloud
      when: not cumulus
      tags: girder

    - name: Restart the Girder server
      girder:
        port: 8080
        username: "hpccloud"
        password: "{{ hpccloud_password }}"
        put:
          path: "system/restart"
      tags: girder

    - name: Wait for Girder to restart
      wait_for: port=8080 delay=5
      tags: girder


    - name: Enable cumulus plugins
      girder:
        port: 8080
        username: "hpccloud"
        password: "{{ hpccloud_password }}"
        plugins:
          - cumulus
          - sftp
          - newt
          - taskflow
        state: present
      tags: girder

    - name: Enable HPCCloud plugins
      girder:
        port: 8080
        username: "hpccloud"
        password: "{{ hpccloud_password }}"
        plugins:
          - hpccloud
          - pvwproxy
        state: present
      when: not cumulus
      tags: girder

    - name: Restart the Girder server
      girder:
        port: 8080
        username: "hpccloud"
        password: "{{ hpccloud_password }}"
        put:
          path: "system/restart"
      tags: girder

    - name: Wait for Girder to restart
      wait_for: port=8080 delay=5
      tags: girder

    - name: Create filesystem assetstore
      girder:
        port: 8080
        username: "hpccloud"
        password: "{{ hpccloud_password }}"
        assetstore:
          name: "Filesystem Assetstore"
          type: "filesystem"
          root: "/opt/hpccloud/assestore"
          current: true
        state: present
      tags: girder

    - name: Set pvwproxy filepath
      girder:
        port: 8080
        username: "hpccloud"
        password: "{{ hpccloud_password }}"
        put:
          path: "system/setting"
          parameters:
            key: "pvwproxy.proxy_file_path"
            value: "/opt/hpccloud/proxy"
      when: not cumulus
      tags: girder

    - name: Restart the Girder server
      girder:
        port: 8080
        username: "hpccloud"
        password: "{{ hpccloud_password }}"
        put:
          path: "system/restart"
      tags: girder


- name: Set up celery
  hosts: cumulus
  become: yes
  become_user: hpccloud
  roles:
    - celery

- name: Set up ParaViewWeb launcher
  hosts: pvwlauncher
  become: yes
  become_user: hpccloud
  roles:
    - pvwlauncher

- name: Set up pyfr
  hosts: pyfr
  become: yes
  become_user: hpccloud
  vars:
    install_pycuda: no
  roles:
    - pyfr
