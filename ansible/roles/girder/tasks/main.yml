- name: Add nodejs ppa
  apt_repository: repo='ppa:chris-lea/node.js' update_cache=no
  become_user: root
  become: yes
  tags: girder

- name: Add MongoDB repo key
  command: apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10
  become_user: root
  become: yes
  tags: girder

- name: Add MongoDB repo
  apt_repository: repo='deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen' update_cache=yes
  become_user: root
  become: yes
  tags: girder

- name: Install package dependencies
  apt: name={{ item }} state=present
  become_user: root
  become: yes
  tags: girder
  with_items:
    - curl
    - g++
    - git
    - libffi-dev
    - make
    - nodejs

- name: Install MongoDb
  apt: name={{ item }} state=present
  become_user: root
  become: yes
  tags: girder
  with_items:
    - mongodb-org-server
    - mongodb-org-shell

- name: Enable mongo full-text search
  lineinfile: dest=/etc/mongod.conf regexp=^setParameter= line=setParameter=textSearchEnabled=true
  become_user: root
  become: yes
  tags: girder
  notify:
    - restart mongod

- name: Install grunt and grunt-cli globally
  npm: name={{ item }} global=yes
  with_items:
    - grunt
    - grunt-cli
  become_user: root
  become: yes
  tags: girder

- name: Get Girder from github
  git: repo=https://github.com/girder/girder.git version={{ girder_version }} dest=/opt/hpccloud/girder force=yes accept_hostkey=yes
  become_user: root
  become: yes
  tags: girder

- name: Change owner of girder directory
  become_user: root
  become: yes
  file: dest=/opt/hpccloud/girder mode=755 owner=hpccloud group=hpccloud state=directory recurse=true
  tags: girder

- name: Install editable girder
  pip:
    chdir: /opt/hpccloud/girder
    extra_args: "-e"
    name: .
  become_user: root
  become: yes

- name: Install editable girder_client
  pip:
    chdir: /opt/hpccloud/girder/clients/python
    extra_args: "-e"
    name: .
  become_user: root
  become: yes

- name: Generate frontend web assets
  command: "girder-install web"
  become_user: root
  become: yes

- name: Install cumulus plugins
  shell: "ls | xargs girder-install plugin -s -f"
  args:
    chdir: /opt/hpccloud/cumulus/girder/
    creates: /opt/hpccloud/girder/plugins/cumulus
  tags: girder
  become_user: root
  become: yes

- name: Install HPCCloud plugins
  shell: "ls | xargs girder-install plugin -s -f"
  args:
    chdir: /opt/hpccloud/hpccloud/server/
    creates: /opt/hpccloud/girder/plugins/hpccloud
  tags: girder
  become_user: root
  become: yes

- name: Install Girder as service
  copy: src=../files/girder.conf dest=/etc/init/girder.conf mode=644 owner=root
  become_user: root
  become: yes
  tags: girder

- name: Start Girder as service
  service: name=girder state=restarted enabled=yes
  become_user: root
  become: yes
  tags: girder

- name: Wait for Girder to start
  wait_for: port=8080 delay=1
  tags: girder

- name: Create Girder hpccloud user
  girder:
    port: 8080
    user:
      firstName: "hpccloud"
      lastName: "hpccloud"
      login: "hpccloud"
      password: "{{ hpccloud_password }}"
      email: "hpccloud@kitware.com"
      admin: yes
    state: present
  tags: girder

- name: Create Girder cumulus user
  girder:
    port: 8080
    username: "hpccloud"
    password: "{{ hpccloud_password }}"
    user:
      firstName: "cumulus"
      lastName: "cumulus"
      login: "cumulus"
      password: "{{ lookup('password', 'credentials/cumuluspassword') }}"
      email: "cumulus@kitware.com"
      admin: yes
    state: present
  tags: girder

- name: Create Girder cumulus group
  girder:
    port: 8080
    username: "hpccloud"
    password: "{{ hpccloud_password }}"
    group:
      name: "cumulus"
      description: "The cumulus group"
      users:
        - login: cumulus
          type: member
  tags: girder

- name: Enable cumulus plugins
  girder:
    port: 8080
    username: "hpccloud"
    password: "{{ hpccloud_password }}"
    plugins:
      - cumulus
      - sftp
      - newt
      - taskflow
    state: present
  tags: girder

- name: Enable HPCCloud plugins
  girder:
    port: 8080
    username: "hpccloud"
    password: "{{ hpccloud_password }}"
    plugins:
      - hpccloud
      - pvwproxy
    state: present
  tags: girder

- name: Restart the Girder server
  girder:
    port: 8080
    username: "hpccloud"
    password: "{{ hpccloud_password }}"
    put:
      path: "system/restart"
  tags: girder

- name: Wait for Girder to restart
  wait_for: port=8080 delay=5
  tags: girder

- name: Create filesystem assetstore
  girder:
    port: 8080
    username: "hpccloud"
    password: "{{ hpccloud_password }}"
    assetstore:
      name: "Filesystem Assetstore"
      type: "filesystem"
      root: "/opt/hpccloud/assestore"
      current: true
    state: present
  tags: girder

- name: Set pvwproxy filepath
  girder:
    port: 8080
    username: "hpccloud"
    password: "{{ hpccloud_password }}"
    put:
      path: "system/setting"
      parameters:
        key: "pvwproxy.proxy_file_path"
        value: "/opt/hpccloud/proxy"

- name: Restart the Girder server
  girder:
    port: 8080
    username: "hpccloud"
    password: "{{ hpccloud_password }}"
    put:
      path: "system/restart"
