- name: Add nodejs ppa
  apt_repository: repo='ppa:chris-lea/node.js' update_cache=no
  become_user: root
  tags: girder

- name: Add MongoDB repo key
  command: apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10
  become_user: root
  tags: girder

- name: Add MongoDB repo
  apt_repository: repo='deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen' update_cache=yes
  become_user: root
  tags: girder

- name: Install package dependencies
  apt: name={{ item }} state=present
  become_user: root
  tags: girder
  with_items:
    - curl
    - g++
    - git
    - libffi-dev
    - make
    - nodejs

- name: Install MongoDb
  apt: name={{ item }} state=present
  become_user: root
  tags: girder
  with_items:
    - mongodb-org-server
    - mongodb-org-shell

- name: Enable mongo full-text search
  lineinfile: dest=/etc/mongod.conf regexp=^setParameter= line=setParameter=textSearchEnabled=true
  become_user: root
  tags: girder
  notify:
    - restart mongod

- name: Install grunt and grunt-cli globally
  npm: name={{ item }} global=yes
  with_items:
    - grunt
    - grunt-cli
  become_user: root
  tags: girder

- name: Get Girder from github
  git: repo=https://github.com/girder/girder.git version={{ girder_version }} dest=/opt/hpccloud/girder force=yes accept_hostkey=yes
  become_user: root
  tags: girder

- name: Change owner of girder directory
  become_user: root
  file: dest=/opt/hpccloud/girder mode=755 owner=hpccloud group=hpccloud state=directory recurse=true
  tags: girder

- name: Install editable girder
  pip:
    chdir: /opt/hpccloud/girder
    extra_args: "-e"
    name: .
  become_user: root

- name: Install editable girder_client
  pip:
    chdir: /opt/hpccloud/girder/clients/python
    extra_args: "-e"
    name: .
  become_user: root

- name: Generate frontend web assets
  command: "girder-install web"


- name: Install cumulus plugins
  shell: "ls | xargs girder-install plugin -s --dev "
  args:
    chdir: /opt/hpccloud/cumulus/girder/
    creates: /opt/hpccloud/girder/plugins/cumulus
  tags: test

- name: Install Girder as service
  copy: src=../files/girder.conf dest=/etc/init/girder.conf mode=644 owner=root
  become_user: root
  tags: girder

- name: Start Girder as service
  service: name=girder state=restarted enabled=yes
  become_user: root
  tags: girder

- name: Copy fixture script
  become_user: root
  copy: src=../../../../girder/setup.py dest=/tmp/setup.py
  tags:
    - girder
    - fixtures

- name: Create temp config dir
  command: mktemp -d
  register: create_tmp_config_dir
  tags:
    - girder
    - fixtures

- name: Get starcluster configuration files
  shell: "ls {{ starcluster_config_glob }}"
  register: starcluster_config_files
  tags:
    - girder
    - fixtures

- name: Copy starcluster configuration files
  shell: "cp {{ item }} {{create_tmp_config_dir.stdout}}/{{item|basename}}"
  with_items:
    starcluster_config_files.stdout_lines
  tags:
    - girder
    - fixtures

# This is a bit of a hack, we don't have API to query config or scripts so for
# now clean out the collections each time.
- name: Clean up starclusterconfigs
  command: mongo girder --eval "db.starclusterconfigs.remove({name":" \"{{item|basename}}\" })"
  with_items:
    starcluster_config_files.stdout_lines
  tags:
    - girder
    - fixtures

- name: Get script files
  shell: "ls {{ script_glob }}"
  register: script_files
  tags:
    - girder
    - fixtures
    - debug

- name: Clean up scripts
  command: mongo girder --eval "db.scripts.remove({name":" \"{{item|basename}}\" })"
  with_items:
    - script_files.stdout_lines
  tags:
    - girder
    - fixtures

- name: Create Girder fixtures
  shell: PYTHONPATH=/opt/hpccloud/cumulus python /tmp/setup.py --url 'http://localhost:8080/api/v1' --hpccloud_password {{ hpccloud_password }} --config_dir={{ create_tmp_config_dir.stdout }} --dummy_hydra {{ '--open_reg' if aws_access_key_id == '' and aws_secret_access_key == '' else '' }}
  tags:
    - girder
    - fixtures

- name: Clean up temp config directory
  file: path={{ create_tmp_config_dir.stdout }} state=absent
  tags:
    - girder
    - fixtures
