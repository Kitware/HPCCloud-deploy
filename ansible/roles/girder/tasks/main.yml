
- name: Add nodejs ppa
  apt_repository: repo='ppa:chris-lea/node.js' update_cache=no
  sudo: yes
  tags: girder

- name: Add MongoDB repo key
  command: apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10
  sudo: yes
  tags: girder

- name: Add MongoDB repo
  apt_repository: repo='deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen' update_cache=yes
  sudo: yes
  tags: girder

- name: Install package dependencies
  apt: name={{ item }} state=present
  sudo: yes
  tags: girder
  with_items:
    - curl
    - g++
    - git
    - libffi-dev
    - make
    - nodejs

- name: Install MongoDb
  apt: name={{ item }} state=present
  sudo: yes
  tags: girder
  with_items:
    - mongodb-org-server
    - mongodb-org-shell

- name: Enable mongo full-text search
  lineinfile: dest=/etc/mongod.conf regexp=^setParameter= line=setParameter=textSearchEnabled=true
  sudo: yes
  tags: girder
  notify:
    - restart mongod

- name: Install grunt and grunt-cli globally
  npm: name={{ item }} global=yes
  with_items:
    - grunt
    - grunt-cli
  sudo: yes
  tags: girder

- name: Get Girder from github
  git: repo=https://github.com/girder/girder.git version={{ girder_version }} dest=/opt/websim/girder
  sudo: yes
  tags: girder

- name: Change owner of girder directory
  sudo: yes
  file: dest=/opt/websim/girder mode=755 owner=websimdev group=websimdev state=directory recurse=true
  tags: girder

- name: Install specified python requirements.
  pip: requirements=/opt/websim/girder/requirements.txt
  sudo: yes
  tags: girder

- name: Compile bcrypt (see https://github.com/pyca/bcrypt/issues/15)
  command: python -c "import bcrypt"
  sudo: yes
  tags: girder

- name: Install girder for development
  command: python setup.py develop chdir=/opt/websim/girder
  sudo: yes
  tags: girder

- name: Upgrade version of requests ( girder using 2.3.0, but we need 2.4.3 )
  pip: name=requests version=2.4.3 state=present
  sudo: yes
  tags: girder

- name: Run npm install
  npm: path=/opt/websim/girder
  tags: girder

- name: Run grunt init
  command: grunt init chdir=/opt/websim/girder
  tags: girder

- name: Run grunt
  command: grunt chdir=/opt/websim/girder
  tags: girder

- name: Install Girder as service
  copy: src=../files/girder.conf dest=/etc/init/girder.conf mode=644 owner=root
  sudo: yes
  tags: girder

- name: Create symlink for cumulus Girder plugin
  file: src=/opt/websim/cumulus/girder/cumulus dest=/opt/websim/girder/plugins/cumulus owner=websimdev group=websimdev state=link
  sudo: yes
  tags: girder

- name: Create symlink for pvproxy Girder plugin
  file: src=/opt/websim/cumulus/girder/pvwproxy dest=/opt/websim/girder/plugins/pvwproxy owner=websimdev group=websimdev state=link
  sudo: yes
  tags: testing

- name: Start Girder as service
  service: name=girder state=restarted enabled=yes
  sudo: yes
  tags: girder

- name: Copy fixture script
  sudo: yes
  copy: src=../../../../girder/setup.py dest=/tmp/setup.py
  tags:
    - girder
    - fixtures

- name: Create temp config dir
  file: dest=/tmp/starcluster-config mode=700 owner=websimdev group=websimdev state=directory
  sudo: yes
  tags:
    - girder
    - fixtures

- name: Template starcluster configuration files
  action: template src={{item}} dest=/tmp/starcluster-config/{{item|basename}} mode=600 owner=websimdev group=websimdev
  sudo: yes
  tags:
    - girder
    - fixtures
  with_fileglob:
    - "{{starcluster_config_glob}}"

# This is a bit of a hack, we don't have API to query config or scripts so for
# now clean out the collections each time.
- name: Clean up starclusterconfigs
  command: mongo girder --eval "db.starclusterconfigs.remove({name":" \"{{item|basename}}\" })"
  with_fileglob:
    - "{{starcluster_config_glob}}"
  tags:
    - girder
    - fixtures

- name: Clean up script
  command: mongo girder --eval "db.scripts.remove({name":" \"{{item|basename}}\" })"
  with_fileglob:
    - "{{script_glob}}"
  tags:
    - girder
    - fixtures

- name: Create Girder fixtures
  command: python /tmp/setup.py --url 'http://localhost:8080/api/v1' --websimdev_password {{ websimdev_password }} --cumulus_password {{ cumulus_password }}
  tags:
    - girder
    - fixtures

- name: Start Girder as service
  service: name=girder state=restarted
  sudo: yes
  tags:
    - girder
    - fixtures

# Need to run this task again because of #452 in Girder
- name: Create Girder fixtures ( again after plugins are enabled )
  command: python /tmp/setup.py --url 'http://localhost:8080/api/v1' --websimdev_password {{ websimdev_password }} --cumulus_password {{ cumulus_password }}
  tags:
    - girder
    - fixtures

- name: Clean up temp config directory
  file: path=/tmp/starcluster-config/ state=absent
  tags:
    - girder
    - fixtures
